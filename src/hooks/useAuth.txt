import { getAuth, onAuthStateChanged } from 'firebase/auth'
import { User } from 'next-auth'
import { ReactNode, useContext, useEffect, useState } from 'react'
import { createContext } from 'vm'
import app from '../../firebase'



interface AuthProps {
  children: ReactNode
}

// Context Provider 정의
export const AuthContextProvider = ({ children }: AuthProps) => {
  const auth = getAuth(app)
  const [currentUser, setCurrentUser] = useState<User | null>(null)
  const AuthContext = createContext({
    user: null as User | null,
  })
  

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, user => {
      setCurrentUser(user)
    })

    // Cleanup: 컴포넌트가 언마운트될 때 구독 취소
    return () => unsubscribe()
  }, [auth])

  return (
    <AuthContext.Provider value={{ user: currentUser }}>
      {children}
    </AuthContext.Provider>
  )
}


export const useAuth = () => {
  const context = useContext(AuthContext)
  if (context === undefined) {
    throw new Error('useAuth must be used within an AuthContextProvider')
  }
  return context
}
